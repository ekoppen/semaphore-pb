- name: Install Docker CE on Debian 12 (bookworm)
  hosts: web
  become: true
  gather_facts: true

  vars:
    # Map Ansible arch → Docker arch
    docker_arch_map:
      x86_64: amd64
      aarch64: arm64
      armv7l: armhf
    docker_arch: "{{ docker_arch_map[ansible_architecture] | default(ansible_architecture) }}"

  tasks:
    - name: Remove Debian's docker packages (avoid conflicts)
      apt:
        name:
          - docker.io
          - docker-doc
          - containerd
          - runc
        state: absent
        purge: yes
      ignore_errors: true

    - name: Install prerequisites
      apt:
        name: [ca-certificates, curl, gnupg, lsb-release]
        state: present
        update_cache: yes

    - name: Ensure keyrings dir exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker’s official GPG key (idempotent)
      shell: |
        curl -fsSL https://download.docker.com/linux/debian/gpg \
        | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker APT repo for bookworm
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        mode: '0644'
        content: |
          deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable

    - name: Update apt cache (Docker repo)
      apt:
        update_cache: yes

    - name: Verify docker-ce candidate exists
      shell: apt-cache policy docker-ce | awk '/Candidate:/{print $2}'
      register: docker_candidate
      changed_when: false

    - name: Install Docker CE + plugins
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: docker_candidate.stdout != "(none)"

    # Fallback als repo (tijdelijk) niet werkt
    - name: Install Docker via convenience script (fallback)
      shell: curl -fsSL https://get.docker.com | sh
      args:
        warn: false
      when: docker_candidate.stdout == "(none)"

    - name: Enable & start Docker
      service:
        name: docker
        state: started
        enabled: yes


    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"
      when: docker_users | length > 0
